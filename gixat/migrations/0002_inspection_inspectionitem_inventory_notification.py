# Generated by Django 5.2.6 on 2025-09-29 10:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('gixat', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inspection_number', models.CharField(max_length=50, unique=True)),
                ('scheduled_date', models.DateTimeField()),
                ('actual_start_time', models.DateTimeField(blank=True, null=True)),
                ('actual_end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('waiting_approval', 'Waiting for Client Approval'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='scheduled', max_length=20)),
                ('overall_condition', models.TextField(blank=True)),
                ('recommendations', models.TextField(blank=True)),
                ('estimated_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('client_approved', models.BooleanField(blank=True, null=True)),
                ('client_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gixat.car')),
                ('inspector', models.ForeignKey(limit_choices_to={'role__in': ['technician', 'manager']}, on_delete=django.db.models.deletion.CASCADE, to='gixat.userprofile')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gixat.organization')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
        migrations.CreateModel(
            name='InspectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('component', models.CharField(max_length=100)),
                ('condition', models.CharField(choices=[('excellent', 'Excellent'), ('good', 'Good'), ('fair', 'Fair'), ('poor', 'Poor'), ('critical', 'Critical')], default='good', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('needs_repair', models.BooleanField(default=False)),
                ('estimated_repair_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='gixat.inspection')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_number', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('category', models.CharField(choices=[('engine', 'Engine Parts'), ('transmission', 'Transmission'), ('brakes', 'Brakes'), ('suspension', 'Suspension'), ('electrical', 'Electrical'), ('body', 'Body Parts'), ('tires', 'Tires'), ('fluids', 'Fluids'), ('tools', 'Tools'), ('other', 'Other')], default='other', max_length=20)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('min_quantity', models.PositiveIntegerField(default=5, help_text='Minimum stock level before alert')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('supplier', models.CharField(blank=True, max_length=100)),
                ('location', models.CharField(blank=True, help_text='Warehouse location', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gixat.organization')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('notification_type', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('error', 'Error'), ('success', 'Success')], default='info', max_length=20)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gixat.organization')),
                ('related_inspection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gixat.inspection')),
                ('related_inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gixat.inventory')),
                ('related_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gixat.session')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]

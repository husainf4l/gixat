# Generated by Django 5.2.6 on 2025-10-05 09:12

from django.db import migrations


def convert_supplier_data(apps, schema_editor):
    Inventory = apps.get_model('gixat', 'Inventory')
    Supplier = apps.get_model('gixat', 'Supplier')
    
    # Get all unique supplier names from inventory
    supplier_names = Inventory.objects.exclude(supplier__isnull=True).exclude(supplier='').values_list('supplier', flat=True).distinct()
    
    # Create suppliers for each unique name
    supplier_map = {}
    for name in supplier_names:
        if name and name.strip():
            supplier, created = Supplier.objects.get_or_create(
                organization=Inventory.objects.filter(supplier=name).first().organization,
                name=name.strip(),
                defaults={
                    'is_active': True
                }
            )
            supplier_map[name] = supplier
    
    # Update inventory records to use supplier foreign key
    for inventory_item in Inventory.objects.exclude(supplier__isnull=True).exclude(supplier=''):
        if inventory_item.supplier in supplier_map:
            inventory_item.supplier_id = supplier_map[inventory_item.supplier].id
            inventory_item.save(update_fields=['supplier_id'])


def reverse_convert_supplier_data(apps, schema_editor):
    Inventory = apps.get_model('gixat', 'Inventory')
    
    # Convert back to string representation
    for inventory_item in Inventory.objects.exclude(supplier__isnull=True):
        inventory_item.supplier = inventory_item.supplier.name
        inventory_item.save(update_fields=['supplier'])


class Migration(migrations.Migration):

    dependencies = [
        ('gixat', '0010_add_supplier_model'),
    ]

    operations = [
        migrations.RunPython(convert_supplier_data, reverse_convert_supplier_data),
    ]
